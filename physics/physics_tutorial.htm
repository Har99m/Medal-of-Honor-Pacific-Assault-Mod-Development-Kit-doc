<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:dt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 10">
<meta name=Originator content="Microsoft Word 10">
<link rel=File-List href="physics_tutorial_files/filelist.xml">
<link rel=Edit-Time-Data href="physics_tutorial_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Physics Tutorial</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="place"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>thess</o:Author>
  <o:LastAuthor>bbilodeau</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>285</o:TotalTime>
  <o:Created>2004-12-07T19:24:00Z</o:Created>
  <o:LastSaved>2004-12-07T19:24:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>1385</o:Words>
  <o:Characters>7898</o:Characters>
  <o:Company>EA-LA</o:Company>
  <o:Lines>65</o:Lines>
  <o:Paragraphs>18</o:Paragraphs>
  <o:CharactersWithSpaces>9265</o:CharactersWithSpaces>
  <o:Version>10.3501</o:Version>
 </o:DocumentProperties>
 <o:CustomDocumentProperties>
  <o:_AdHocReviewCycleID dt:dt="float">1715496723</o:_AdHocReviewCycleID>
  <o:_EmailSubject dt:dt="string">physics tutorial</o:_EmailSubject>
  <o:_AuthorEmail dt:dt="string">THess@EA.com</o:_AuthorEmail>
  <o:_AuthorEmailDisplayName dt:dt="string">Hess, Tom</o:_AuthorEmailDisplayName>
  <o:_ReviewingToolsShownOnce dt:dt="string"></o:_ReviewingToolsShownOnce>
 </o:CustomDocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
 </w:WordDocument>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:553679495 -2147483648 8 0 66047 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman";
	mso-fareast-font-family:"Times New Roman";}
h1
	{mso-style-next:Normal;
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:16.0pt;
	font-family:Arial;
	mso-font-kerning:16.0pt;}
h2
	{mso-style-link:"Heading 2 Char";
	mso-style-next:Normal;
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:14.0pt;
	font-family:Arial;
	font-style:italic;}
p.MsoDocumentMap, li.MsoDocumentMap, div.MsoDocumentMap
	{mso-style-noshow:yes;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	background:navy;
	font-size:12.0pt;
	font-family:Tahoma;
	mso-fareast-font-family:"Times New Roman";}
span.Heading2Char
	{mso-style-name:"Heading 2 Char";
	mso-style-link:"Heading 2";
	mso-ansi-font-size:14.0pt;
	mso-bidi-font-size:14.0pt;
	font-family:Arial;
	mso-ascii-font-family:Arial;
	mso-hansi-font-family:Arial;
	mso-bidi-font-family:Arial;
	mso-ansi-language:EN-US;
	mso-fareast-language:EN-US;
	mso-bidi-language:AR-SA;
	font-weight:bold;
	font-style:italic;}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman";}
</style>
<![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in'>

<div class=Section1>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:16.0pt'>Physics Tutorial<o:p></o:p></span></b></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Currently physics is enabled for interactive water (covered
separately), specially marked <span class=SpellE>bonecasters</span> and
terrain. Interactive water and terrain will automatically Just <span
class=SpellE>Work<sup>tm</sup></span>, but <span class=SpellE>bonecasters</span>
need to be set up in Radiant and require some TLC when coming out of max.
Physics is now on whether it is used or not.<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<h2>1) Considerations</h2>

<p class=MsoNormal>The current implementation of Havoc physics only allows for
bounding box collision on moving parts. Havoc appears to be somewhat tolerant
of a small amount of interpenetration, but does strange things with more than a
small amount of interpenetration.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<h2>2) Placing a Havoc <span class=SpellE>Bonecaster</span> in Radiant</h2>

<p class=MsoNormal><span class=SpellE>Bonecasters</span> automatically hug the
terrain. There is a new menu option: “Selection-&gt;<span class=SpellE>Bonecaster</span>
Terrain Hug” which, when on (the default), will cause <span class=SpellE>bonecasters</span>
to hug the terrain. When this is off <span class=SpellE>bonecasters</span> will
retain their exported configuration when either being imported or moved.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<h2>3) Making a <span class=SpellE>Bonecaster</span> a Havoc Physics Group</h2>

<p class=MsoNormal>Add the key “havoc” and set the value to “1”.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<h2>4) <span class=SpellE>Bonecaster</span> children options.</h2>

<p class=MsoNormal>A <span class=SpellE>bonecaster</span> child may have the
following options:</p>

<p class=MsoNormal style='margin-left:3.25in;text-indent:-3.25in;tab-stops:
.25in 1.5in 153.0pt'><span style='mso-tab-count:1'>      </span></p>

<p class=MsoNormal style='margin-left:3.25in;text-indent:-3.25in;tab-stops:
.25in 1.5in 153.0pt'><span style='mso-tab-count:1'>      </span><b
style='mso-bidi-font-weight:normal'><span style='font-size:10.0pt;font-family:
"Courier New"'>Name<span style='mso-tab-count:1'>           </span>Type<span
style='mso-tab-count:1'>    </span>Example Key<span style='mso-tab-count:1'>   </span>Description<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:3.25in;text-indent:-3.25in;tab-stops:
.25in 1.5in 153.0pt'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>   </span><span class=SpellE>physics_scale</span><span
style='mso-tab-count:1'>  </span>vector<span style='mso-tab-count:1'>  </span>0.9
<span class=SpellE>0.9</span> <span class=SpellE>0.9</span><span
style='mso-tab-count:1'>   </span>Rescales the physics (and only the physics)
bounding box around the <span class=SpellE>centroid</span> of the object.<o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:3.25in;text-indent:-3.25in;tab-stops:
.25in 1.5in 153.0pt'><span style='font-size:10.0pt;font-family:"Courier New"'><span
style='mso-tab-count:1'>   </span><span class=SpellE>Always_fixed</span><span
style='mso-tab-count:1'>   </span><span class=SpellE>int</span><span
style='mso-tab-count:1'>     </span>1<span style='mso-tab-count:1'>             </span>1
= object is physical, but can’t be moved. 0 is the default, which is an
ordinary physics box.<o:p></o:p></span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<h2>5) Engine: Triggering the effect</h2>

<p class=MsoNormal>Currently objects will “wake up” when they are within the
radius of an explosion. A feature may be added at a later point to mark objects
to wake up on level load, but this will require that objects placed in the
level have already been settled.</p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:16.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:.5in'><b style='mso-bidi-font-weight:
normal'><span style='font-size:16.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:.5in'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>Physics Properties<o:p></o:p></b></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:1.0in;text-indent:-1.0in'>havoc<span
style='mso-tab-count:1'>               </span>1 turns it on.<span
style='mso-spacerun:yes'>  </span>Sets the <span class=SpellE>bonecaster</span>
to be a physics object.<span style='mso-spacerun:yes'>  </span>Must be applied
to parent of <span class=SpellE>bonecaster</span>.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:1.0in;text-indent:-1.0in'><span
class=SpellE>always_fixed</span><span style='mso-tab-count:1'>     </span>0 is
default and makes the child a physics object.<span style='mso-spacerun:yes'> 
</span>1 means the object will never move but will use physics collision.<span
style='mso-spacerun:yes'>  </span>Must be applied the children of the <span
class=SpellE>bonecaster</span>.</p>

<p class=MsoNormal style='margin-left:1.0in;text-indent:-1.0in'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:1.0in;text-indent:-1.0in'><span
class=SpellE>always_awake</span><span style='mso-tab-count:1'>  </span>0 is the
default.<span style='mso-spacerun:yes'>  </span>The physics object must be
exposed to an explosion to become live.<span style='mso-spacerun:yes'> 
</span>1 sets the object to live when the level loads.<span
style='mso-spacerun:yes'>  </span>Must be applied to the children of the <span
class=SpellE>bonecaster</span>.</p>

<p class=MsoNormal style='margin-left:1.0in;text-indent:-1.0in'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:1.0in;text-indent:-1.0in'>density<span
style='mso-tab-count:1'>              </span>0.9 is the default.<span
style='mso-spacerun:yes'>  </span>Setting the number higher than 1 will make it
sink in water, 1 or less will make it float.<span style='mso-spacerun:yes'> 
</span>The higher the number the more force will be required to move the
object.</p>

<p class=MsoNormal style='margin-left:1.0in;text-indent:-1.0in'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:1.0in;text-indent:-1.0in'><span
class=SpellE>physics_scale</span><span style='mso-tab-count:1'>    </span>The
physics scale is an invisible collision that the physics engine uses.<span
style='mso-spacerun:yes'>  </span>It is different than regular collision.<span
style='mso-spacerun:yes'>  </span>The <span class=SpellE>physics_scale</span>
is the max <span class=SpellE>x,y,z</span> of the model.<span
style='mso-spacerun:yes'>  </span></p>

<p class=MsoNormal style='margin-left:1.0in;text-indent:-1.0in'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>The basics of setting
up a physics object:<o:p></o:p></b></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:.5in'>Place a <span class=SpellE>bonecaster</span>
into your level, making sure that <span class=SpellE>Bonecaster</span> Terrain
Hug in the Selection menu is NOT checked.<span style='mso-spacerun:yes'> 
</span>If you have a <span class=SpellE>bonecaster</span> table, and the
Terrain Hug is checked the table will collapse to the terrain.<span
style='mso-spacerun:yes'>  </span>Having the Terrain Hug unchecked allows you
to move the object anywhere in the level and will have to be placed to match
the terrain.<span style='mso-spacerun:yes'>  </span>For our test physics
object, right click in the 2d window and select Models&gt;test&gt;<span
class=SpellE>havok_table.tik</span>.<span style='mso-spacerun:yes'> 
</span>This will place the object in the level.<span style='mso-spacerun:yes'> 
</span>Move it to an appropriate place on the map.<span
style='mso-spacerun:yes'>  </span>Select the parent <span class=SpellE>bonecaster</span>,
press “n” to bring up your entity window and enter the following <span
style='color:red'>Key</span> and <span style='color:green'>Value</span>: <span
style='color:red'>havoc</span> <span style='color:green'>1.<span
style='mso-spacerun:yes'>  </span></span>Your object is now a physics
object.<span style='mso-spacerun:yes'>  </span>It will have no collision and
will not react with the rest of the world until it is activated.<span
style='mso-spacerun:yes'>  </span>To activate it throw a grenade at it and
watch the wonderful world of physics happen before your very own eyes.<span
style='mso-spacerun:yes'>  </span></p>

<p class=MsoNormal style='margin-left:.5in'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>Manipulating a
Physics object:<o:p></o:p></b></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:.5in'>There are two things you can do to
this physics object, keep a piece fixed and bring the object into the world
“live”.<span style='mso-spacerun:yes'>  </span></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><span style='mso-tab-count:1'>            </span>Fixed
children:</p>

<p class=MsoNormal style='margin-left:1.0in'>Fixing a child node in the <span
class=SpellE>bonecaster</span> is a very helpful option.<span
style='mso-spacerun:yes'>  </span>It makes the destruction of a physics object
look more natural.<span style='mso-spacerun:yes'>  </span>If you have a physics
bridge that you want to blow up, but you don’t want the pieces of the bridge
that are anchored to the ground to be affected.<span style='mso-spacerun:yes'> 
</span>When the bridge was constructed the main boards were anchored into the
ground.<span style='mso-spacerun:yes'>  </span>So<span
style='mso-spacerun:yes'>  </span>you want the bridge to blow up and four
splintered logs (what’s left of the support beams, two on each side) to remain
in the ground.<span style='mso-spacerun:yes'>  </span>You have to select the
children nodes corresponding to those pieces and press “n” to bring up your
entity window.<span style='mso-spacerun:yes'>  </span>You will notice, if you
have tagged the parent node as havoc 1, that there is a property in your entity
window call <span class=SpellE>always_fixed</span> 0.<span
style='mso-spacerun:yes'>  </span>This is the default setting which means it
WILL be affected by physics.<span style='mso-spacerun:yes'>  </span>Change the
0 to a 1.<span style='mso-spacerun:yes'>  </span>This means that the child node
will not move during an explosion, but other physics objects will react to
it.<span style='mso-spacerun:yes'>  </span>Bring up your table again and select
one of the legs.<span style='mso-spacerun:yes'>  </span>Change the always fixed
to 1 and throw a grenade at it again.<span style='mso-spacerun:yes'> 
</span>Observe the leg that you tagged as always fixed.</p>

<p class=MsoNormal style='margin-left:1.0in'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:.5in'>“Live” Objects:</p>

<p class=MsoNormal style='margin-left:1.0in'>Just like my favorite band Bon <span
class=SpellE>Jovi</span>, physics objects are much more fun “Live”.<span
style='mso-spacerun:yes'>  </span>When a physics object is “live” that means
when the level loads up the object will try to settle.<span
style='mso-spacerun:yes'>  </span>If the object is not stable it will collapse
like a deck of cards.<span style='mso-spacerun:yes'>  </span>Depending on how
high off the ground your table is, making it live should work fine.<span
style='mso-spacerun:yes'>  </span>Select the parent <span class=SpellE>bonecaster</span>,
then select Complete <span class=SpellE>bonecaster</span> from the selection
menu.<span style='mso-spacerun:yes'>  </span>Deselect the parent so that all of
the children are selected.<span style='mso-spacerun:yes'>  </span>Press “n” to
bring up the entity window.<span style='mso-spacerun:yes'>  </span>You will see
a property call <span class=SpellE>always_awake</span> 0.<span
style='mso-spacerun:yes'>  </span>0 is the default value and means that an
explosion has to go off near the object in order for it to be live.<span
style='mso-spacerun:yes'>  </span>Set the value of the table to 1 and load up
your level.<span style='mso-spacerun:yes'>  </span>Now you can shoot it and it
will react to your bullets.<span style='mso-spacerun:yes'>  </span>You will
notice how unstable objects are when they are live.</p>

<p class=MsoNormal style='margin-left:1.0in'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:1.0in'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt'>Fun with Physics<o:p></o:p></span></b></p>

<p class=MsoNormal>(If you like to blow stuff up!!! Read on, young soldier!)</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>Creating a mine field<o:p></o:p></b></p>

<p class=MsoNormal style='margin-left:.5in'>First lets place our landmine.<span
style='mso-spacerun:yes'>  </span>Create an Class&gt;Info&gt;<span
class=SpellE>Not_Null</span>.<span style='mso-spacerun:yes'>  </span>Give it a <span
class=SpellE>targetname</span> $<span class=SpellE>landminesKill</span>.<span
style='mso-spacerun:yes'>  </span>The info <span class=SpellE>not_null</span>
is essentially your landmine.<span style='mso-spacerun:yes'>  </span>This is
where the effect and damage will be spawned.<span style='mso-spacerun:yes'> 
</span>Make sure your info <span class=SpellE>not_null</span> is above the
terrain. If it is bellow the terrain the damage will not damage anything above
the terrain.<span style='mso-spacerun:yes'>  </span>Now set up a <span
class=SpellE>trigger_once</span> around your landmine and give it a <span
class=SpellE>tragetname</span> $<span class=SpellE>mine_trigger</span>.<span
style='mso-spacerun:yes'>  </span>Make sure that it is taller than the
player.<span style='mso-spacerun:yes'>  </span>Also it takes almost a second
once the trigger has been triggered for the mine to go off, so make the trigger
box pretty wide around the info <span class=SpellE>not_null</span>. <span
style='mso-spacerun:yes'> </span>Add this to your script:</p>

<p class=MsoNormal style='margin-left:.5in'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:.5in'>//----------------------------------------------------------------------------</p>

<p class=MsoNormal style='margin-left:.5in'><st1:place>Main</st1:place>:</p>

<p class=MsoNormal style='margin-left:.5in'>//</p>

<p class=MsoNormal style='margin-left:.5in'>//----------------------------------------------------------------------------</p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-tab-count:1'>            </span>$<span
class=SpellE>landminesKill</span> thread $<span class=SpellE>mine_trigger</span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-tab-count:1'>            </span>end<span
style='mso-tab-count:1'>       </span></p>

<p class=MsoNormal style='margin-left:.5in'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:.5in'>//----------------------------------------------------------------------------</p>

<p class=MsoNormal style='margin-left:.5in'><span class=SpellE>ArmMine</span> <span
class=SpellE>local.trigger</span>:</p>

<p class=MsoNormal style='margin-left:.5in'>//</p>

<p class=MsoNormal style='margin-left:.5in'>//</p>

<p class=MsoNormal style='margin-left:.5in'>//----------------------------------------------------------------------------</p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-tab-count:1'>            </span><span
class=SpellE>local.trigger</span> <span class=SpellE>waittill</span> trigger</p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-tab-count:2'>                        </span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-tab-count:1'>            </span>thread
<span class=SpellE>DoBombAttackSingle</span> $self 1000 200</p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-tab-count:1'>            </span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-tab-count:1'>            </span>end<span
style='mso-tab-count:1'>       </span></p>

<p class=MsoNormal style='margin-left:.5in'>//----------------------------------------------------------------------------</p>

<p class=MsoNormal style='margin-left:.5in'><span class=SpellE>SpawnEffects</span>
local.fx1 local.fx2:</p>

<p class=MsoNormal style='margin-left:.5in'>//</p>

<p class=MsoNormal style='margin-left:.5in'>// Spawn the bomb effects</p>

<p class=MsoNormal style='margin-left:.5in'>//----------------------------------------------------------------------------</p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-tab-count:1'>            </span>local.temp1<span
style='mso-spacerun:yes'>  </span>= spawn <span class=SpellE>script_model</span>
model local.fx1</p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-tab-count:1'>            </span>local.temp1
<span class=SpellE>notsolid</span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-tab-count:1'>            </span>local.temp1.origin
= <span class=SpellE>self.origin</span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-tab-count:1'>            </span>local.temp1
<span class=SpellE>anim</span> start</p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-tab-count:1'>            </span>local.temp1
<span class=SpellE>notsolid</span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-tab-count:1'>            </span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-tab-count:1'>            </span>local.temp2<span
style='mso-spacerun:yes'>  </span>= spawn <span class=SpellE>script_model</span>
model local.fx2</p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-tab-count:1'>            </span>local.temp2
<span class=SpellE>notsolid</span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-tab-count:1'>            </span>local.temp2.origin
= <span class=SpellE>self.origin</span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-tab-count:1'>            </span>local.temp2
<span class=SpellE>anim</span> start</p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-tab-count:1'>            </span>local.temp2
<span class=SpellE>notsolid</span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-tab-count:1'>            </span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-tab-count:1'>            </span>wait
5</p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-tab-count:1'>            </span>local.temp1
delete</p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-tab-count:1'>            </span>local.temp2
delete</p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-tab-count:1'>            </span></p>

<p class=MsoNormal style='margin-left:.5in'>end</p>

<p class=MsoNormal style='margin-left:.5in'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:.5in'>//
***********************************************</p>

<p class=MsoNormal style='margin-left:.5in'>// Multi-<span class=SpellE>porition</span>
threaded bomb attack used below</p>

<p class=MsoNormal style='margin-left:.5in'>//
**********************************************</p>

<p class=MsoNormal style='margin-left:.5in'><span class=SpellE>DoBombAttackSingle</span>
<span class=SpellE>local.bomb_location</span> <span class=SpellE>local.ExplosionForce</span>
<span class=SpellE>local.ExplosionRadius</span>:</p>

<p class=MsoNormal style='margin-left:.5in'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-tab-count:1'>            </span>wait
0.3</p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-tab-count:1'>            </span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-tab-count:1'>            </span><span
class=SpellE>radiusdamage</span> <span class=SpellE>local.bomb_location.origin</span>
<span class=SpellE>local.ExplosionForce</span> <span class=SpellE>local.ExplosionRadius</span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-tab-count:1'>            </span><span
class=SpellE>local.bomb_location</span> thread <span class=SpellE>SpawnEffects</span>
models/<span class=SpellE>fx/fx_explosion.tik</span> models/emitters/<span
class=SpellE>explosion_mine_shockwave.tik</span></p>

<p class=MsoNormal style='margin-left:.5in'><span style='mso-tab-count:1'>            </span></p>

<p class=MsoNormal style='margin-left:.5in'>end</p>

<p class=MsoNormal style='margin-left:.5in'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:.5in'>Your mine is now armed and ready.<span
style='mso-spacerun:yes'>  </span>You can start your level and run over it
yourself, or you can change the trigger by checking off Monsters, and make the
enemy run over your crafty little mine.<span style='mso-spacerun:yes'> 
</span>Enjoy!</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><b style='mso-bidi-font-weight:normal'>Physics<span
style='mso-spacerun:yes'>  </span>Scale<o:p></o:p></b></p>

<p class=MsoNormal>The physics scale is a different type of scale than the
model scale.<span style='mso-spacerun:yes'>  </span>You may often have to
adjust the physics scale to get a desired effect from a model.<span
style='mso-spacerun:yes'>  </span>For our example we will use
Models&gt;Test&gt;<span class=SpellE>tall_gray_broken.tik</span>.<span
style='mso-spacerun:yes'>  </span>If we keep the Physics scale at it’s default,
this is what we get: </p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><span style='mso-spacerun:yes'> </span>Use <span
class=SpellE>g_drawphysics</span> 1 to see the physics scale.</p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><!--[if gte vml 1]><v:shapetype id="_x0000_t75" coordsize="21600,21600"
 o:spt="75" o:preferrelative="t" path="m@4@5l@4@11@9@11@9@5xe" filled="f"
 stroked="f">
 <v:stroke joinstyle="miter"/>
 <v:formulas>
  <v:f eqn="if lineDrawn pixelLineWidth 0"/>
  <v:f eqn="sum @0 1 0"/>
  <v:f eqn="sum 0 0 @1"/>
  <v:f eqn="prod @2 1 2"/>
  <v:f eqn="prod @3 21600 pixelWidth"/>
  <v:f eqn="prod @3 21600 pixelHeight"/>
  <v:f eqn="sum @0 0 1"/>
  <v:f eqn="prod @6 1 2"/>
  <v:f eqn="prod @7 21600 pixelWidth"/>
  <v:f eqn="sum @8 21600 0"/>
  <v:f eqn="prod @7 21600 pixelHeight"/>
  <v:f eqn="sum @10 21600 0"/>
 </v:formulas>
 <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
 <o:lock v:ext="edit" aspectratio="t"/>
</v:shapetype><v:shape id="_x0000_i1025" type="#_x0000_t75" style='width:6in;
 height:372.75pt'>
 <v:imagedata src="physics_tutorial_files/image001.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=576 height=497
src="physics_tutorial_files/image002.jpg" v:shapes="_x0000_i1025"><![endif]></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>(to see the physics scale, open the console and type <span
class=SpellE>g_drawphysics</span> 1)</p>

<p class=MsoNormal>Notice how the trunk of the tree’s physics scale is what we
would expect, whereas the top part of the tree’s physics scale is too
large.<span style='mso-spacerun:yes'>  </span>If you throw a grenade at these
trees they won’t even topple over.<span style='mso-spacerun:yes'>  </span>We
need to adjust the tops of the trees to get the scale we want.<span
style='mso-spacerun:yes'>  </span>In radiant , select all the top children of
each tree. Press “n” to bring up the entity window and change the <span
class=SpellE>physics_scale</span> from 1.00000 <span class=SpellE>1.00000</span>
<span class=SpellE>1.00000</span> to 0.1 <span class=SpellE>0.1</span> 1.00000
and then load up your game.<span style='mso-spacerun:yes'>  </span>This is what
we will get:</p>

<p class=MsoNormal><!--[if gte vml 1]><v:shape id="_x0000_i1026" type="#_x0000_t75"
 style='width:6in;height:334.5pt'>
 <v:imagedata src="physics_tutorial_files/image003.png" o:title=""/>
</v:shape><![endif]--><![if !vml]><img width=576 height=446
src="physics_tutorial_files/image004.jpg" v:shapes="_x0000_i1026"><![endif]></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>Now the collision looks more like we want it to be.<span
style='mso-spacerun:yes'>  </span>Notice how adjusting the Physics scale did
not affect the scale of the model.<span style='mso-spacerun:yes'>  </span>Now
when we blow up the trees they will react more like we want them to.<o:p></o:p></p>

</div>

</body>

</html>
